#创建者：liyaya
#创建时间： 
print('-----------------------函数的定义和调用-----------------------')
#定义一个函数
#def  函数名（arg1,grg2,...）：
#     函数主体
#     返回值：return  x

#函数的调用： 函数名（实参1，实参2，....）

#在函数的调用过程中，如果实参是不可变对象，那么在函数中的修改不会影响实参的值
#如果实参是可变对象，那么在函数中的调用会影响实参的值

#函数的返回值
#（1）没有返回值
#（2）如果只返回一个参数，那么就直接显示
#（3）如果返回多个参数，那么会以元组的形式展示

#函数参数的默认值
#如果参数没有传递，那么使用默认值；如果参数都传递了，那么将替换默认值
def fun(a, b=10):
    print(a, b)
fun(100)
fun(10, 20)

'''函数的参数定义'''
#个数可变的位置参数：无法事先确定传递的位置参数的个数，使用可变的位置参数：（*args）：结果为元组
#个数可变的位置参数: 个数只能有一个
def fun(*args):
    print(args)

fun(10)
fun(10, 20)
fun(10, 20, 30)
#个数可变的关键字形参：无法事先确定传递的关键字形参的个数，使用可变的关键字形参：（**args）：结果为字典
#个数可变的关键字形参：个数只能有一个
def fun(**args):
    print(args)

fun(a=10)
fun(a=10, b=20)
fun(a=10, b=20, c=30)
#实参传递的时候，如果想要把元组或者字典中的对象，赋值给形参，需要使用*，**
def fun1(a, b, c, d):
    print('a=', a)
    print('b=', b)
    print('c=', c)
    print('d=', d)
fun1(10, 20, 30, 40)
fun1(10, 20, c=30, d=40)  #如果既有位置参数，又有关键字形参，那么位置参数要放在关键字形参前面
fun1(a=10, b=20, c=30, d=40)

'''如果想要把元组或者字典中的对象，赋值给形参，需要使用*，**'''
t1 = (10, 20, 30, 40)
fun1(*t1)
dic1 = {'a': 1, 'b': 2, 'c': 3, 'd': 4}
fun1(**dic1)

'''如果想要让某些形参变为关键字形参，那么使用*，分隔形参，*后面的形参必须为关键字形参'''
def fun2(a, b, *, c, d):
    print('a=', a)
    print('b=', b)
    print('c=', c)
    print('d=', d)
fun2(10, 20, c=30, d=40)



